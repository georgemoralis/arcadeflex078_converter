What we convert
===============

Functions Ptr's
===============
static MEMORY_READ_START
static MEMORY_WRITE_START
static PORT_READ_START
static PORT_WRITE_START
static WRITE_HANDLER
static READ_HANDLER
INPUT_PORTS_START ,PORT_START,PORT_BIT,PORT_DIPSETTING,PORT_DIPNAME,PORT_BITX,PORT_SERVICE,PORT_BIT_IMPULSE,PORT_ANALOG,PORT_ANALOGX,INPUT_PORTS_END
INTERRUPT_GEN
PALETTE_INIT
VIDEO_UPDATE
ROM_START
ROM_END

Misc
====

& removed inside MEMORY_READ_START,MEMORY_WRITE_START,PORT_READ_START,PORT_WRITE_START functions
lines that start with "extern" removed
Removed forward functions ( WRITE_HANDLER , READ_HANDLER,VIDEO_START,VIDEO_UPDATE,VIDEO_EOF,PALETTE_INIT)
enum's conversion (partial)
if(something) will be become if(something!=0)
videoram (from generic vidhrdw) , reads-writes
spriteram (from generic vidhrdw) , reads-writes
convert -> to .
videoram_size to videoram_size[0]
&Machine to Machine
spriteram_2,spriteram_3 (from generic vidhrdw) , reads-writes
soundlatch_w ,1,2,3,4 handler
videoram_w converts to videoram_w.handler
plotpixel converts to plotpixel.handler
paletteram,paletteram_2 read/write conversion
colorram read/write conversion
spriteram_size to spriteram_size[0]
video_start_generic to video_start_generic.handler
colorprom read/write conversion
input_port_*_r (1-10) to input_port_*_r.handler